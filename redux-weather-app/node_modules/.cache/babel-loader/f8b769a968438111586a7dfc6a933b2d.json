{"ast":null,"code":"import _classCallCheck from \"/Users/kama/Desktop/CODE/Education/redux-weather-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kama/Desktop/CODE/Education/redux-weather-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kama/Desktop/CODE/Education/redux-weather-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kama/Desktop/CODE/Education/redux-weather-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kama/Desktop/CODE/Education/redux-weather-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kama/Desktop/CODE/Education/redux-weather-app/src/components/App/index.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { fetchWeather } from 'redux/actions';\nimport Spinner from 'components/App/Spinner';\nimport WeatherList from 'components/App/WeatherList';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      activeTab: \"Pictures\"\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.fetchWeather();\n    }\n  }, {\n    key: \"changeActiveTab\",\n    value: function changeActiveTab(tab) {\n      this.setState({\n        activeTab: tab\n      });\n    }\n  }, {\n    key: \"activeTabContent\",\n    value: function activeTabContent() {\n      var _this2 = this;\n\n      var activeIndex = tabList.findIndex(function (tab) {\n        return tab.name === _this2.state.activeTab;\n      });\n      return tabList[activeIndex].content;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          error = _this$props.error,\n          loading = _this$props.loading,\n          weather = _this$props.weather;\n      var city = 'Warsaw'; // replace with dynamic city name\n\n      if (error) {\n        return React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        }, error.message);\n      }\n\n      return React.createElement(\"section\", {\n        className: \"section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \"Your weather for \", city), loading ? React.createElement(Spinner, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }) : React.createElement(WeatherList, {\n        weather: weather,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(_ref) {\n  var weather = _ref.weather;\n  return weather;\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    fetchWeather: fetchWeather\n  }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/kama/Desktop/CODE/Education/redux-weather-app/src/components/App/index.js"],"names":["React","Component","connect","bindActionCreators","fetchWeather","Spinner","WeatherList","App","props","state","activeTab","tab","setState","activeIndex","tabList","findIndex","name","content","error","loading","weather","city","message","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SAASC,YAAT,QAA6B,eAA7B;AAEA,OAAOC,OAAP,MAAoB,wBAApB;AACA,OAAOC,WAAP,MAAwB,4BAAxB;;IAEMC,G;;;;;AACJ,eAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,6EAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAE;AADA,KAAb;AAHiB;AAMlB;;;;wCAEmB;AAClB,WAAKF,KAAL,CAAWJ,YAAX;AACD;;;oCAEeO,G,EAAK;AACnB,WAAKC,QAAL,CAAc;AAAEF,QAAAA,SAAS,EAAEC;AAAb,OAAd;AACD;;;uCAEkB;AAAA;;AACjB,UAAME,WAAW,GAAGC,OAAO,CAACC,SAAR,CAAkB,UAACJ,GAAD,EAAS;AAC7C,eAAOA,GAAG,CAACK,IAAJ,KAAa,MAAI,CAACP,KAAL,CAAWC,SAA/B;AACD,OAFmB,CAApB;AAIA,aAAOI,OAAO,CAACD,WAAD,CAAP,CAAqBI,OAA5B;AACD;;;6BAEQ;AAAA,wBAC6B,KAAKT,KADlC;AAAA,UACCU,KADD,eACCA,KADD;AAAA,UACQC,OADR,eACQA,OADR;AAAA,UACiBC,OADjB,eACiBA,OADjB;AAEP,UAAMC,IAAI,GAAG,QAAb,CAFO,CAEe;;AAEtB,UAAIH,KAAJ,EAAW;AACT,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAIA,KAAK,CAACI,OAAV,CAAP;AACD;;AAED,aACE;AAAS,QAAA,SAAS,EAAC,SAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAAwCD,IAAxC,CADF,EAGIF,OAAO,GACL,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADK,GAEL,oBAAC,WAAD;AAAa,QAAA,OAAO,EAAEC,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALN,CADF;AAUD;;;;EA3CenB,S;;AA8ClB,IAAMsB,eAAe,GAAG,SAAlBA,eAAkB;AAAA,MAAGH,OAAH,QAAGA,OAAH;AAAA,SAAiBA,OAAjB;AAAA,CAAxB;;AAEA,IAAMI,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ;AAAA,SACjCtB,kBAAkB,CAAC;AAAEC,IAAAA,YAAY,EAAZA;AAAF,GAAD,EAAmBqB,QAAnB,CADe;AAAA,CAAnC;;AAIA,eAAevB,OAAO,CAACqB,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CjB,GAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { fetchWeather } from 'redux/actions';\n\nimport Spinner from 'components/App/Spinner';\nimport WeatherList from 'components/App/WeatherList';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      activeTab: \"Pictures\"\n    };\n  }\n    \n  componentDidMount() {\n    this.props.fetchWeather();\n  }\n\n  changeActiveTab(tab) {\n    this.setState({ activeTab: tab });\n  }\n  \n  activeTabContent() {\n    const activeIndex = tabList.findIndex((tab) => {\n      return tab.name === this.state.activeTab;\n    });\n    \n    return tabList[activeIndex].content;\n  }\n\n  render() {\n    const { error, loading, weather } = this.props;\n    const city = 'Warsaw' // replace with dynamic city name\n\n    if (error) {\n      return <p>{error.message}</p>;\n    }\n\n    return (\n      <section className=\"section\">\n        <h2 className=\"title\">Your weather for {city}</h2>\n        {\n          loading\n          ? <Spinner />\n          : <WeatherList weather={weather}/>\n        }\n      </section>\n    );\n  }\n}\n\nconst mapStateToProps = ({ weather }) => weather;\n\nconst mapDispatchToProps = dispatch => (\n  bindActionCreators({ fetchWeather }, dispatch)\n);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}