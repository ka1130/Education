{"ast":null,"code":"import _classCallCheck from \"/Users/kama/Desktop/CODE/Education/redux-weather-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kama/Desktop/CODE/Education/redux-weather-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kama/Desktop/CODE/Education/redux-weather-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kama/Desktop/CODE/Education/redux-weather-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kama/Desktop/CODE/Education/redux-weather-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kama/Desktop/CODE/Education/redux-weather-app/src/components/App/index.js\";\nimport React, { Component } from 'react';\nimport Geocode from 'react-geocode';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { fetchWeather } from 'redux/actions/weatherActions';\nimport Spinner from 'components/App/Spinner';\nimport WeatherList from 'components/App/WeatherList';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    _classCallCheck(this, App);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(App).apply(this, arguments));\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // navigator.geolocation.getCurrentPosition(function(position) {\n      //   console.log(position.coords.latitude, position.coords.longitude);\n      // });\n      var coords = function coords() {\n        return navigator.geolocation.getCurrentPosition(function (position) {\n          return position.coords;\n        });\n      };\n\n      console.log(coords());\n      this.props.fetchWeather();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          error = _this$props.error,\n          loading = _this$props.loading,\n          weather = _this$props.weather;\n\n      if (error) {\n        return React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25\n          },\n          __self: this\n        }, error.message);\n      }\n\n      return React.createElement(\"section\", {\n        className: \"section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, loading ? React.createElement(Spinner, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }) : React.createElement(WeatherList, {\n        weather: weather,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(_ref) {\n  var weather = _ref.weather;\n  return weather;\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    fetchWeather: fetchWeather\n  }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/kama/Desktop/CODE/Education/redux-weather-app/src/components/App/index.js"],"names":["React","Component","Geocode","connect","bindActionCreators","fetchWeather","Spinner","WeatherList","App","coords","navigator","geolocation","getCurrentPosition","position","console","log","props","error","loading","weather","message","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,eAApB;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SAASC,YAAT,QAA6B,8BAA7B;AAEA,OAAOC,OAAP,MAAoB,wBAApB;AACA,OAAOC,WAAP,MAAwB,4BAAxB;;IAEMC,G;;;;;;;;;;;;;wCACgB;AAClB;AACA;AACA;AACA,UAAMC,MAAM,GAAG,SAATA,MAAS;AAAA,eAAMC,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAAyC,UAACC,QAAD;AAAA,iBAAcA,QAAQ,CAACJ,MAAvB;AAAA,SAAzC,CAAN;AAAA,OAAf;;AACJK,MAAAA,OAAO,CAACC,GAAR,CAAYN,MAAM,EAAlB;AACI,WAAKO,KAAL,CAAWX,YAAX;AACD;;;6BAEQ;AAAA,wBAC6B,KAAKW,KADlC;AAAA,UACCC,KADD,eACCA,KADD;AAAA,UACQC,OADR,eACQA,OADR;AAAA,UACiBC,OADjB,eACiBA,OADjB;;AAGP,UAAIF,KAAJ,EAAW;AACT,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAIA,KAAK,CAACG,OAAV,CAAP;AACD;;AAED,aACE;AAAS,QAAA,SAAS,EAAC,SAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEIF,OAAO,GACL,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADK,GAEL,oBAAC,WAAD;AAAa,QAAA,OAAO,EAAEC,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJN,CADF;AASD;;;;EA1BelB,S;;AA6BlB,IAAMoB,eAAe,GAAG,SAAlBA,eAAkB;AAAA,MAAGF,OAAH,QAAGA,OAAH;AAAA,SAAiBA,OAAjB;AAAA,CAAxB;;AAEA,IAAMG,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ;AAAA,SACjCnB,kBAAkB,CAAC;AAAEC,IAAAA,YAAY,EAAZA;AAAF,GAAD,EAAmBkB,QAAnB,CADe;AAAA,CAAnC;;AAIA,eAAepB,OAAO,CAACkB,eAAD,EAAkBC,kBAAlB,CAAP,CAA6Cd,GAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport Geocode from 'react-geocode';\n\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { fetchWeather } from 'redux/actions/weatherActions';\n\nimport Spinner from 'components/App/Spinner';\nimport WeatherList from 'components/App/WeatherList';\n\nclass App extends Component {\n  componentDidMount() {\n    // navigator.geolocation.getCurrentPosition(function(position) {\n    //   console.log(position.coords.latitude, position.coords.longitude);\n    // });\n    const coords = () => navigator.geolocation.getCurrentPosition((position) => position.coords);\nconsole.log(coords());\n    this.props.fetchWeather();\n  }\n\n  render() {\n    const { error, loading, weather } = this.props;\n\n    if (error) {\n      return <p>{error.message}</p>;\n    }\n\n    return (\n      <section className=\"section\">\n        {\n          loading\n          ? <Spinner />\n          : <WeatherList weather={weather}/>\n        }\n      </section>\n    );\n  }\n}\n\nconst mapStateToProps = ({ weather }) => weather;\n\nconst mapDispatchToProps = dispatch => (\n  bindActionCreators({ fetchWeather }, dispatch)\n);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}