{"ast":null,"code":"import _classCallCheck from \"/Users/kama/Desktop/CODE/Education/redux-weather-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kama/Desktop/CODE/Education/redux-weather-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kama/Desktop/CODE/Education/redux-weather-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kama/Desktop/CODE/Education/redux-weather-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kama/Desktop/CODE/Education/redux-weather-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kama/Desktop/CODE/Education/redux-weather-app/src/components/App/WeatherCharts/index.js\";\nimport React, { Component } from 'react';\nimport { v4 } from 'node-uuid';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { fetchWeather } from 'redux/actions/weatherActions';\nimport findUserLocation from 'helpers/findUserLocation';\nimport Chart from 'components/App/WeatherCharts/Chart';\nimport Spinner from 'components/App/Spinner';\n\nvar WeatherCharts =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(WeatherCharts, _Component);\n\n  function WeatherCharts() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, WeatherCharts);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(WeatherCharts)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.renderWeather = function (data) {\n      var temps = data.list.map(function (weather) {\n        return Math.trunc(weather.main.temp - 273.15);\n      });\n      var pressures = data.list.map(function (weather) {\n        return weather.main.pressure;\n      });\n      var humidities = data.list.map(function (weather) {\n        return weather.main.humidity;\n      });\n      return React.createElement(\"tr\", {\n        key: v4(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(Chart, {\n        data: temps,\n        color: \"orange\",\n        units: \"\\xB0C\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      })), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(Chart, {\n        data: pressures,\n        color: \"green\",\n        units: \"hPa\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      })), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(Chart, {\n        data: humidities,\n        color: \"black\",\n        units: \"%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      })));\n    };\n\n    return _this;\n  }\n\n  _createClass(WeatherCharts, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var findUserLocation = new Promise(function (resolve, reject) {\n        if (\"geolocation\" in navigator) {\n          navigator.geolocation.getCurrentPosition(function (position) {\n            resolve(position.coords);\n          }, function (error) {\n            if (error.code === error.PERMISSION_DENIED) {\n              console.error(\"Error detecting location.\");\n            }\n          });\n        }\n      });\n      findUserLocation.then(function (location) {\n        return _this2.props.fetchWeather(location);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (!this.props.weather.list) {\n        return React.createElement(Spinner, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(\"table\", {\n        className: \"table\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        className: \"has-background-light\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, \"Temperature\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"Pressure \"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, \"Humidity\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, this.renderWeather(this.props.weather)));\n    }\n  }]);\n\n  return WeatherCharts;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(_ref) {\n  var weather = _ref.weather;\n  return weather;\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    fetchWeather: fetchWeather\n  }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WeatherCharts);","map":{"version":3,"sources":["/Users/kama/Desktop/CODE/Education/redux-weather-app/src/components/App/WeatherCharts/index.js"],"names":["React","Component","v4","connect","bindActionCreators","fetchWeather","findUserLocation","Chart","Spinner","WeatherCharts","renderWeather","data","temps","list","map","weather","Math","trunc","main","temp","pressures","pressure","humidities","humidity","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","position","coords","error","code","PERMISSION_DENIED","console","then","location","props","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { v4 } from 'node-uuid';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { fetchWeather } from 'redux/actions/weatherActions';\nimport findUserLocation from 'helpers/findUserLocation';\n\nimport Chart from 'components/App/WeatherCharts/Chart';\nimport Spinner from 'components/App/Spinner';\n\nclass WeatherCharts extends Component {\n  componentDidMount() {\n    const findUserLocation = new Promise((resolve, reject) => {\n      if (\"geolocation\" in navigator) {\n        navigator.geolocation.getCurrentPosition((position) => {\n          resolve(position.coords);\n        }, (error) => {\n          if(error.code === error.PERMISSION_DENIED) {\n            console.error(\"Error detecting location.\");\n          }\n        });\n      }\n    })\n\n    findUserLocation.then(location => this.props.fetchWeather(location));\n  }\n\n  renderWeather = (data) => {\n    const temps = data.list.map(weather => Math.trunc(weather.main.temp - 273.15));\n    const pressures = data.list.map(weather => weather.main.pressure);\n    const humidities = data.list.map(weather => weather.main.humidity);\n\n    return (\n      <tr key={v4()}>\n        <td><Chart data={temps} color=\"orange\" units=\"°C\" /></td>\n        <td><Chart data={pressures} color=\"green\" units=\"hPa\" /></td>\n        <td><Chart data={humidities} color=\"black\" units=\"%\" /></td>\n      </tr>\n    );\n  }\n\n  render() {\n    if (!this.props.weather.list) {\n      return <Spinner />;\n    }\n\n    return (\n      <table className=\"table\">\n        <thead className=\"has-background-light\">\n          <tr>\n            <th>Temperature</th>\n            <th>Pressure </th>\n            <th>Humidity</th>\n          </tr>\n        </thead>\n        <tbody>\n          {this.renderWeather(this.props.weather)}\n        </tbody>\n      </table>\n    );\n  };\n}\n\nconst mapStateToProps = ({ weather }) => weather;\n\nconst mapDispatchToProps = dispatch => (\n  bindActionCreators({ fetchWeather }, dispatch)\n);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WeatherCharts);\n"]},"metadata":{},"sourceType":"module"}