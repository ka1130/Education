{"ast":null,"code":"import _classCallCheck from \"/Users/kama/Desktop/CODE/Education/redux-weather-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kama/Desktop/CODE/Education/redux-weather-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kama/Desktop/CODE/Education/redux-weather-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kama/Desktop/CODE/Education/redux-weather-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kama/Desktop/CODE/Education/redux-weather-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kama/Desktop/CODE/Education/redux-weather-app/src/components/App/index.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { fetchWeather } from 'redux/actions';\nimport Spinner from 'components/App/Spinner';\nimport WeatherList from 'components/App/WeatherList';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    _classCallCheck(this, App);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(App).apply(this, arguments));\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.fetchWeather();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          error = _this$props.error,\n          loading = _this$props.loading,\n          weather = _this$props.weather;\n      var city = 'Warsaw'; // replace with dynamic city name\n\n      if (error) {\n        return React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 19\n          },\n          __self: this\n        }, error.message);\n      }\n\n      return React.createElement(React.Fragment, null, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, \"Your weather for \", city), loading ? React.createElement(Spinner, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }) : React.createElement(WeatherList, {\n        weather: weather,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(_ref) {\n  var weather = _ref.weather;\n  return weather;\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    fetchWeather: fetchWeather\n  }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/kama/Desktop/CODE/Education/redux-weather-app/src/components/App/index.js"],"names":["React","Component","connect","bindActionCreators","fetchWeather","Spinner","WeatherList","App","props","error","loading","weather","city","message","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SAASC,YAAT,QAA6B,eAA7B;AAEA,OAAOC,OAAP,MAAoB,wBAApB;AACA,OAAOC,WAAP,MAAwB,4BAAxB;;IAEMC,G;;;;;;;;;;;;;wCACgB;AAClB,WAAKC,KAAL,CAAWJ,YAAX;AACD;;;6BAEQ;AAAA,wBAC6B,KAAKI,KADlC;AAAA,UACCC,KADD,eACCA,KADD;AAAA,UACQC,OADR,eACQA,OADR;AAAA,UACiBC,OADjB,eACiBA,OADjB;AAEP,UAAMC,IAAI,GAAG,QAAb,CAFO,CAEe;;AAEtB,UAAIH,KAAJ,EAAW;AACT,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAIA,KAAK,CAACI,OAAV,CAAP;AACD;;AAED,aACE,0CACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAAsBD,IAAtB,CADF,EAGIF,OAAO,GACL,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADK,GAEL,oBAAC,WAAD;AAAa,QAAA,OAAO,EAAEC,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALN,CADF;AAUD;;;;EAvBeV,S;;AA0BlB,IAAMa,eAAe,GAAG,SAAlBA,eAAkB;AAAA,MAAGH,OAAH,QAAGA,OAAH;AAAA,SAAiBA,OAAjB;AAAA,CAAxB;;AAEA,IAAMI,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ;AAAA,SACjCb,kBAAkB,CAAC;AAAEC,IAAAA,YAAY,EAAZA;AAAF,GAAD,EAAmBY,QAAnB,CADe;AAAA,CAAnC;;AAIA,eAAed,OAAO,CAACY,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CR,GAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { fetchWeather } from 'redux/actions';\n\nimport Spinner from 'components/App/Spinner';\nimport WeatherList from 'components/App/WeatherList';\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.fetchWeather();\n  }\n\n  render() {\n    const { error, loading, weather } = this.props;\n    const city = 'Warsaw' // replace with dynamic city name\n\n    if (error) {\n      return <p>{error.message}</p>;\n    }\n\n    return (\n      <>\n        <h2>Your weather for {city}</h2>\n        {\n          loading\n          ? <Spinner />\n          : <WeatherList weather={weather}/>\n        }\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = ({ weather }) => weather;\n\nconst mapDispatchToProps = dispatch => (\n  bindActionCreators({ fetchWeather }, dispatch)\n);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}