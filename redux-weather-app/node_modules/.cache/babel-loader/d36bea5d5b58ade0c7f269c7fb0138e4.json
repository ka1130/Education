{"ast":null,"code":"import axios from 'axios';\nimport { FETCH_WEATHER_BEGIN, FETCH_WEATHER_SUCCESS, FETCH_WEATHER_FAILURE } from 'redux/actions/types'; // 52.285282099999996 21.0279629\n\nvar googolemapkey = 'AIzaSyDY5kZJmnORrvm1IODYBdB4sYjTOt6_maQ';\nvar API_KEY = '1d1ed4c5c279b3103998e234955244b6'; // const GEOLOCATED_URL =  `https://api.openweathermap.org/data/2.5/forecast?lat=${lat}&lon=${long}&appid=${API_KEY}`\n\nvar ROOT_URL = \"https://api.openweathermap.org/data/2.5/forecast?appid=\".concat(API_KEY);\nvar city = 'Warsaw';\nvar url = \"\".concat(ROOT_URL, \"&q=\").concat(city, \",pl\"); // const lat = 52;\n// const lon = 21;\n\nvar getUrl = function getUrl(lat, lon) {\n  return \"https://api.openweathermap.org/data/2.5/forecast?lat=\".concat(lat, \"&lon=\").concat(lon, \"&appid=\").concat(API_KEY);\n};\n\nexport function fetchWeather() {\n  var coords = function coords() {\n    return navigator.geolocation.getCurrentPosition(function (position) {\n      console.log(position.coords);\n      return position.coords;\n    });\n  };\n\n  console.log(coords());\n  return function (dispatch) {\n    axios.get(url).then(function (response) {\n      dispatch(fetchWeatherSuccess(response));\n      return response;\n    }).catch(function (error) {\n      return dispatch(fetchWeatherFailure(error));\n    });\n  };\n}\nexport var fetchWeatherBegin = function fetchWeatherBegin() {\n  return {\n    type: FETCH_WEATHER_BEGIN\n  };\n};\nexport var fetchWeatherSuccess = function fetchWeatherSuccess(response) {\n  return {\n    type: FETCH_WEATHER_SUCCESS,\n    payload: response.data\n  };\n};\nexport var fetchWeatherFailure = function fetchWeatherFailure(error) {\n  return {\n    type: FETCH_WEATHER_FAILURE,\n    payload: error.message\n  };\n};","map":{"version":3,"sources":["/Users/kama/Desktop/CODE/Education/redux-weather-app/src/redux/actions/weatherActions.js"],"names":["axios","FETCH_WEATHER_BEGIN","FETCH_WEATHER_SUCCESS","FETCH_WEATHER_FAILURE","googolemapkey","API_KEY","ROOT_URL","city","url","getUrl","lat","lon","fetchWeather","coords","navigator","geolocation","getCurrentPosition","position","console","log","dispatch","get","then","response","fetchWeatherSuccess","catch","error","fetchWeatherFailure","fetchWeatherBegin","type","payload","data","message"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,mBADF,EAEEC,qBAFF,EAGEC,qBAHF,QAIO,qBAJP,C,CAMA;;AACA,IAAMC,aAAa,GAAG,yCAAtB;AAEA,IAAMC,OAAO,GAAG,kCAAhB,C,CACA;;AACA,IAAMC,QAAQ,oEAA6DD,OAA7D,CAAd;AACA,IAAME,IAAI,GAAG,QAAb;AACA,IAAMC,GAAG,aAAMF,QAAN,gBAAoBC,IAApB,QAAT,C,CAEA;AACA;;AAEA,IAAME,MAAM,GAAG,SAATA,MAAS,CAACC,GAAD,EAAMC,GAAN,EAAc;AAC3B,wEAA+DD,GAA/D,kBAA0EC,GAA1E,oBAAuFN,OAAvF;AACD,CAFD;;AAIA,OAAO,SAASO,YAAT,GAAwB;AAE7B,MAAMC,MAAM,GAAG,SAATA,MAAS,GAAM;AACnB,WAAOC,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAAyC,UAACC,QAAD,EAAc;AAC5DC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACJ,MAArB;AACA,aAAOI,QAAQ,CAACJ,MAAhB;AACD,KAHM,CAAP;AAID,GALD;;AAOAK,EAAAA,OAAO,CAACC,GAAR,CAAYN,MAAM,EAAlB;AAEA,SAAO,UAAAO,QAAQ,EAAI;AACjBpB,IAAAA,KAAK,CAACqB,GAAN,CAAUb,GAAV,EACCc,IADD,CACM,UAAAC,QAAQ,EAAI;AAChBH,MAAAA,QAAQ,CAACI,mBAAmB,CAACD,QAAD,CAApB,CAAR;AACA,aAAOA,QAAP;AACD,KAJD,EAKCE,KALD,CAKO,UAAAC,KAAK;AAAA,aAAIN,QAAQ,CAACO,mBAAmB,CAACD,KAAD,CAApB,CAAZ;AAAA,KALZ;AAMD,GAPD;AAQD;AAED,OAAO,IAAME,iBAAiB,GAAG,SAApBA,iBAAoB;AAAA,SAAO;AACtCC,IAAAA,IAAI,EAAE5B;AADgC,GAAP;AAAA,CAA1B;AAIP,OAAO,IAAMuB,mBAAmB,GAAG,SAAtBA,mBAAsB,CAAAD,QAAQ;AAAA,SAAK;AAC9CM,IAAAA,IAAI,EAAE3B,qBADwC;AAE9C4B,IAAAA,OAAO,EAAEP,QAAQ,CAACQ;AAF4B,GAAL;AAAA,CAApC;AAKP,OAAO,IAAMJ,mBAAmB,GAAG,SAAtBA,mBAAsB,CAAAD,KAAK;AAAA,SAAK;AAC3CG,IAAAA,IAAI,EAAE1B,qBADqC;AAE3C2B,IAAAA,OAAO,EAAEJ,KAAK,CAACM;AAF4B,GAAL;AAAA,CAAjC","sourcesContent":["import axios from 'axios';\nimport { \n  FETCH_WEATHER_BEGIN,\n  FETCH_WEATHER_SUCCESS,\n  FETCH_WEATHER_FAILURE\n} from 'redux/actions/types';\n\n// 52.285282099999996 21.0279629\nconst googolemapkey = 'AIzaSyDY5kZJmnORrvm1IODYBdB4sYjTOt6_maQ';\n\nconst API_KEY = '1d1ed4c5c279b3103998e234955244b6';\n// const GEOLOCATED_URL =  `https://api.openweathermap.org/data/2.5/forecast?lat=${lat}&lon=${long}&appid=${API_KEY}`\nconst ROOT_URL = `https://api.openweathermap.org/data/2.5/forecast?appid=${API_KEY}`;\nconst city = 'Warsaw';\nconst url = `${ROOT_URL}&q=${city},pl`;\n\n// const lat = 52;\n// const lon = 21;\n\nconst getUrl = (lat, lon) => {\n  return `https://api.openweathermap.org/data/2.5/forecast?lat=${lat}&lon=${lon}&appid=${API_KEY}`;\n}\n\nexport function fetchWeather() {\n  \n  const coords = () => {\n    return navigator.geolocation.getCurrentPosition((position) => {\n      console.log(position.coords);\n      return position.coords;\n    });\n  }\n\n  console.log(coords());\n\n  return dispatch => {\n    axios.get(url)\n    .then(response => {\n      dispatch(fetchWeatherSuccess(response));\n      return response; \n    })\n    .catch(error => dispatch(fetchWeatherFailure(error)));\n  };\n}\n\nexport const fetchWeatherBegin = () => ({\n  type: FETCH_WEATHER_BEGIN\n});\n\nexport const fetchWeatherSuccess = response => ({\n  type: FETCH_WEATHER_SUCCESS,\n  payload: response.data\n});\n\nexport const fetchWeatherFailure = error => ({\n  type: FETCH_WEATHER_FAILURE,\n  payload: error.message\n});"]},"metadata":{},"sourceType":"module"}