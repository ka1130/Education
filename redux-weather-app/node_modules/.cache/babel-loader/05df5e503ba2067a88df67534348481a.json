{"ast":null,"code":"import _classCallCheck from \"/Users/kama/Desktop/CODE/Education/redux-weather-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kama/Desktop/CODE/Education/redux-weather-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kama/Desktop/CODE/Education/redux-weather-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kama/Desktop/CODE/Education/redux-weather-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kama/Desktop/CODE/Education/redux-weather-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kama/Desktop/CODE/Education/redux-weather-app/src/components/App/WeatherCharts/index.js\";\nimport React, { Component } from 'react';\nimport { v4 } from 'node-uuid';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { fetchWeather } from 'redux/actions';\nimport Chart from 'components/App/WeatherCharts/Chart';\nimport Spinner from 'components/App/Spinner';\n\nvar WeatherCharts =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(WeatherCharts, _Component);\n\n  function WeatherCharts() {\n    _classCallCheck(this, WeatherCharts);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(WeatherCharts).apply(this, arguments));\n  }\n\n  _createClass(WeatherCharts, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.fetchWeather();\n    } // renderWeather = (data) => {\n    //   console.log(data);\n    //   const temps = data.list.map(weather => Math.trunc(weather.main.temp - 273.15));\n    //   const pressures = data.list.map(weather => weather.main.pressure);\n    //   const humidities = data.list.map(weather => weather.main.humidity);\n    //   const { lon, lat } = data.city.coord;\n    //   return (\n    //     <tr key={v4()}>\n    //       <td><Chart data={temps} color=\"orange\" units=\"°C\" /></td>\n    //       <td><Chart data={pressures} color=\"green\" units=\"hPa\" /></td>\n    //       <td><Chart data={humidities} color=\"black\" units=\"%\" /></td>\n    //     </tr>\n    //   );\n    // }\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (!this.props.weather.list) {\n        return React.createElement(Spinner, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(React.Fragment, null, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, \"Charts for \", this.props.weather.city.name), React.createElement(\"table\", {\n        className: \"table\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        className: \"has-background-light\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, \"Temperature\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, \"Pressure \"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \"Humidity\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return WeatherCharts;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(_ref) {\n  var weather = _ref.weather;\n  return weather;\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    fetchWeather: fetchWeather\n  }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WeatherCharts);","map":{"version":3,"sources":["/Users/kama/Desktop/CODE/Education/redux-weather-app/src/components/App/WeatherCharts/index.js"],"names":["React","Component","v4","connect","bindActionCreators","fetchWeather","Chart","Spinner","WeatherCharts","props","weather","list","city","name","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,EAAT,QAAmB,WAAnB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SAASC,YAAT,QAA6B,eAA7B;AAEA,OAAOC,KAAP,MAAkB,oCAAlB;AACA,OAAOC,OAAP,MAAoB,wBAApB;;IAEMC,a;;;;;;;;;;;;;wCACgB;AAClB,WAAKC,KAAL,CAAWJ,YAAX;AACD,K,CAED;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;6BAES;AACP,UAAI,CAAC,KAAKI,KAAL,CAAWC,OAAX,CAAmBC,IAAxB,EAA8B;AAC5B,eAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;AAED,aACE,0CACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAgB,KAAKF,KAAL,CAAWC,OAAX,CAAmBE,IAAnB,CAAwBC,IAAxC,CADF,EAEE;AAAO,QAAA,SAAS,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAO,QAAA,SAAS,EAAC,sBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHF,CADF,CADF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARF,CAFF,CADF;AAkBD;;;;EA5CyBZ,S;;AA+C5B,IAAMa,eAAe,GAAG,SAAlBA,eAAkB;AAAA,MAAGJ,OAAH,QAAGA,OAAH;AAAA,SAAiBA,OAAjB;AAAA,CAAxB;;AAEA,IAAMK,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ;AAAA,SACjCZ,kBAAkB,CAAC;AAAEC,IAAAA,YAAY,EAAZA;AAAF,GAAD,EAAmBW,QAAnB,CADe;AAAA,CAAnC;;AAIA,eAAeb,OAAO,CAACW,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CP,aAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { v4 } from 'node-uuid';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { fetchWeather } from 'redux/actions';\n\nimport Chart from 'components/App/WeatherCharts/Chart';\nimport Spinner from 'components/App/Spinner';\n\nclass WeatherCharts extends Component {\n  componentDidMount() {\n    this.props.fetchWeather();\n  }\n\n  // renderWeather = (data) => {\n  //   console.log(data);\n  //   const temps = data.list.map(weather => Math.trunc(weather.main.temp - 273.15));\n  //   const pressures = data.list.map(weather => weather.main.pressure);\n  //   const humidities = data.list.map(weather => weather.main.humidity);\n  //   const { lon, lat } = data.city.coord;\n\n  //   return (\n  //     <tr key={v4()}>\n  //       <td><Chart data={temps} color=\"orange\" units=\"°C\" /></td>\n  //       <td><Chart data={pressures} color=\"green\" units=\"hPa\" /></td>\n  //       <td><Chart data={humidities} color=\"black\" units=\"%\" /></td>\n  //     </tr>\n  //   );\n  // }\n\n  render() {\n    if (!this.props.weather.list) {\n      return <Spinner />;\n    }\n\n    return (\n      <>\n        <h3>Charts for {this.props.weather.city.name}</h3>\n        <table className=\"table\">\n          <thead className=\"has-background-light\">\n            <tr>\n              <th>Temperature</th>\n              <th>Pressure </th>\n              <th>Humidity</th>\n            </tr>\n          </thead>\n          <tbody>\n            {/* {this.renderWeather(this.props.weather)} */}\n            {/* {this.props.weather.list.map(this.renderWeather)} */}\n          </tbody>\n        </table>\n      </>\n    );\n  };\n}\n\nconst mapStateToProps = ({ weather }) => weather;\n\nconst mapDispatchToProps = dispatch => (\n  bindActionCreators({ fetchWeather }, dispatch)\n);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WeatherCharts);\n"]},"metadata":{},"sourceType":"module"}