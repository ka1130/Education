{"ast":null,"code":"import _objectSpread from \"/Users/kama/Desktop/CODE/Education/redux-weather-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { FETCH_WEATHER_BEGIN, FETCH_WEATHER_FAILURE, FETCH_WEATHER_SUCCESS } from 'redux/actions/types';\nvar initialState = {\n  weather: [],\n  loading: false,\n  error: null\n};\nexport default function data() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case FETCH_WEATHER_BEGIN:\n      return _objectSpread({}, state, {\n        loading: true,\n        error: null\n      });\n\n    case FETCH_WEATHER_SUCCESS:\n      return _objectSpread({}, state, {\n        loading: false,\n        weather: action.payload.weather\n      });\n\n    case FETCH_WEATHER_FAILURE:\n      return _objectSpread({}, state, {\n        loading: false,\n        error: action.payload.error\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/kama/Desktop/CODE/Education/redux-weather-app/src/redux/reducers/weatherReducer.js"],"names":["FETCH_WEATHER_BEGIN","FETCH_WEATHER_FAILURE","FETCH_WEATHER_SUCCESS","initialState","weather","loading","error","data","state","action","type","payload"],"mappings":";AAAA,SACEA,mBADF,EAEEC,qBAFF,EAGEC,qBAHF,QAIO,qBAJP;AAMA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE,EADU;AAEnBC,EAAAA,OAAO,EAAE,KAFU;AAGnBC,EAAAA,KAAK,EAAE;AAHY,CAArB;AAMA,eAAe,SAASC,IAAT,GAA4C;AAAA,MAA9BC,KAA8B,uEAAtBL,YAAsB;AAAA,MAARM,MAAQ;;AACzD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKV,mBAAL;AACE,+BACKQ,KADL;AAEEH,QAAAA,OAAO,EAAE,IAFX;AAGEC,QAAAA,KAAK,EAAE;AAHT;;AAMF,SAAKJ,qBAAL;AACE,+BACKM,KADL;AAEEH,QAAAA,OAAO,EAAE,KAFX;AAGED,QAAAA,OAAO,EAAEK,MAAM,CAACE,OAAP,CAAeP;AAH1B;;AAMF,SAAKH,qBAAL;AACE,+BACKO,KADL;AAEEH,QAAAA,OAAO,EAAE,KAFX;AAGEC,QAAAA,KAAK,EAAEG,MAAM,CAACE,OAAP,CAAeL;AAHxB;;AAMF;AACE,aAAOE,KAAP;AAvBJ;AAyBD","sourcesContent":["import {\n  FETCH_WEATHER_BEGIN,\n  FETCH_WEATHER_FAILURE,\n  FETCH_WEATHER_SUCCESS\n} from 'redux/actions/types';\n\nconst initialState = {\n  weather: [],\n  loading: false,\n  error: null,\n};\n\nexport default function data(state = initialState, action) {\n  switch (action.type) {\n    case FETCH_WEATHER_BEGIN:\n      return {\n        ...state,\n        loading: true,\n        error: null,\n      };\n\n    case FETCH_WEATHER_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        weather: action.payload.weather,\n      };\n\n    case FETCH_WEATHER_FAILURE:\n      return {\n        ...state,\n        loading: false,\n        error: action.payload.error,\n      };\n\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}