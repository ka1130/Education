{"ast":null,"code":"import axios from 'axios';\nimport { FETCH_WEATHER_BEGIN, FETCH_WEATHER_SUCCESS, FETCH_WEATHER_FAILURE } from 'redux/actions/types';\nvar API_KEY = '1d1ed4c5c279b3103998e234955244b6';\nvar ROOT_URL = \"https://api.openweathermap.org/data/2.5/forecast?appid=\".concat(API_KEY);\nvar city = 'Warsaw';\nvar url = \"\".concat(ROOT_URL, \"&q=\").concat(city, \",pl\");\nexport function fetchWeather() {\n  return function (dispatch) {\n    dispatch(fetchWeatherBegin());\n    return fetch(url).then(handleErrors).then(function (response) {\n      return response.json();\n    }).then(function (json) {\n      console.log(json);\n      dispatch(fetchWeatherSuccess(json));\n      return json;\n    }).catch(function (error) {\n      return dispatch(fetchWeatherFailure(error));\n    });\n  };\n}\n\nfunction handleErrors(response) {\n  if (!response.ok) {\n    throw Error(response.statusText);\n  }\n\n  return response;\n}\n\nexport var fetchWeatherBegin = function fetchWeatherBegin() {\n  return {\n    type: FETCH_WEATHER_BEGIN\n  };\n};\nexport var fetchWeatherSuccess = function fetchWeatherSuccess(weather) {\n  return {\n    type: FETCH_WEATHER_SUCCESS,\n    payload: {\n      weather: weather\n    }\n  };\n};\nexport var fetchWeatherFailure = function fetchWeatherFailure(error) {\n  return {\n    type: FETCH_WEATHER_FAILURE,\n    payload: {\n      error: error\n    }\n  };\n};","map":{"version":3,"sources":["/Users/kama/Desktop/CODE/Education/redux-weather-app/src/redux/actions/index.js"],"names":["axios","FETCH_WEATHER_BEGIN","FETCH_WEATHER_SUCCESS","FETCH_WEATHER_FAILURE","API_KEY","ROOT_URL","city","url","fetchWeather","dispatch","fetchWeatherBegin","fetch","then","handleErrors","response","json","console","log","fetchWeatherSuccess","catch","error","fetchWeatherFailure","ok","Error","statusText","type","weather","payload"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,mBADF,EAEEC,qBAFF,EAGEC,qBAHF,QAIO,qBAJP;AAMA,IAAMC,OAAO,GAAG,kCAAhB;AACA,IAAMC,QAAQ,oEAA6DD,OAA7D,CAAd;AACA,IAAME,IAAI,GAAG,QAAb;AACA,IAAMC,GAAG,aAAMF,QAAN,gBAAoBC,IAApB,QAAT;AAEA,OAAO,SAASE,YAAT,GAAwB;AAC7B,SAAO,UAAAC,QAAQ,EAAI;AACjBA,IAAAA,QAAQ,CAACC,iBAAiB,EAAlB,CAAR;AACA,WAAOC,KAAK,CAACJ,GAAD,CAAL,CACJK,IADI,CACCC,YADD,EAEJD,IAFI,CAEC,UAAAE,QAAQ;AAAA,aAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,KAFT,EAGJH,IAHI,CAGC,UAAAG,IAAI,EAAI;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAN,MAAAA,QAAQ,CAACS,mBAAmB,CAACH,IAAD,CAApB,CAAR;AACA,aAAOA,IAAP;AACD,KAPI,EAQJI,KARI,CAQE,UAAAC,KAAK;AAAA,aAAIX,QAAQ,CAACY,mBAAmB,CAACD,KAAD,CAApB,CAAZ;AAAA,KARP,CAAP;AASD,GAXD;AAYD;;AAED,SAASP,YAAT,CAAsBC,QAAtB,EAAgC;AAC9B,MAAI,CAACA,QAAQ,CAACQ,EAAd,EAAkB;AAChB,UAAMC,KAAK,CAACT,QAAQ,CAACU,UAAV,CAAX;AACD;;AACD,SAAOV,QAAP;AACD;;AAED,OAAO,IAAMJ,iBAAiB,GAAG,SAApBA,iBAAoB;AAAA,SAAO;AACtCe,IAAAA,IAAI,EAAExB;AADgC,GAAP;AAAA,CAA1B;AAIP,OAAO,IAAMiB,mBAAmB,GAAG,SAAtBA,mBAAsB,CAAAQ,OAAO;AAAA,SAAK;AAC7CD,IAAAA,IAAI,EAAEvB,qBADuC;AAE7CyB,IAAAA,OAAO,EAAE;AAAED,MAAAA,OAAO,EAAPA;AAAF;AAFoC,GAAL;AAAA,CAAnC;AAKP,OAAO,IAAML,mBAAmB,GAAG,SAAtBA,mBAAsB,CAAAD,KAAK;AAAA,SAAK;AAC3CK,IAAAA,IAAI,EAAEtB,qBADqC;AAE3CwB,IAAAA,OAAO,EAAE;AAAEP,MAAAA,KAAK,EAALA;AAAF;AAFkC,GAAL;AAAA,CAAjC","sourcesContent":["import axios from 'axios';\nimport { \n  FETCH_WEATHER_BEGIN,\n  FETCH_WEATHER_SUCCESS,\n  FETCH_WEATHER_FAILURE\n} from 'redux/actions/types';\n\nconst API_KEY = '1d1ed4c5c279b3103998e234955244b6';\nconst ROOT_URL = `https://api.openweathermap.org/data/2.5/forecast?appid=${API_KEY}`;\nconst city = 'Warsaw';\nconst url = `${ROOT_URL}&q=${city},pl`;\n\nexport function fetchWeather() {\n  return dispatch => {\n    dispatch(fetchWeatherBegin());\n    return fetch(url)\n      .then(handleErrors)\n      .then(response => response.json())\n      .then(json => {\n        console.log(json)\n        dispatch(fetchWeatherSuccess(json));\n        return json;\n      })\n      .catch(error => dispatch(fetchWeatherFailure(error)));\n  };\n}\n\nfunction handleErrors(response) {\n  if (!response.ok) {\n    throw Error(response.statusText);\n  }\n  return response;\n}\n\nexport const fetchWeatherBegin = () => ({\n  type: FETCH_WEATHER_BEGIN\n});\n\nexport const fetchWeatherSuccess = weather => ({\n  type: FETCH_WEATHER_SUCCESS,\n  payload: { weather }\n});\n\nexport const fetchWeatherFailure = error => ({\n  type: FETCH_WEATHER_FAILURE,\n  payload: { error }\n});"]},"metadata":{},"sourceType":"module"}