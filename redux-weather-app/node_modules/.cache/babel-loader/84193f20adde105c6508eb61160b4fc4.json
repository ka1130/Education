{"ast":null,"code":"import _classCallCheck from \"/Users/kama/Desktop/CODE/Education/redux-weather-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kama/Desktop/CODE/Education/redux-weather-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kama/Desktop/CODE/Education/redux-weather-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kama/Desktop/CODE/Education/redux-weather-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kama/Desktop/CODE/Education/redux-weather-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kama/Desktop/CODE/Education/redux-weather-app/src/components/App/WeatherCharts/index.js\";\nimport React, { Component } from 'react';\nimport { v4 } from 'node-uuid';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { fetchWeather } from 'redux/actions';\nimport Spinner from 'components/App/Spinner';\n\nvar WeatherCharts =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(WeatherCharts, _Component);\n\n  function WeatherCharts() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, WeatherCharts);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(WeatherCharts)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.renderWeather = function (data) {\n      var temps = data.main.temp;\n      var pressures = data.main.pressure;\n      var humidities = data.main.humidity; // console.log(data);\n      // const { name } = data.city;\n      // const temps = \n\n      return React.createElement(\"tr\", {\n        key: v4(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, temps));\n    };\n\n    return _this;\n  }\n\n  _createClass(WeatherCharts, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.fetchWeather();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (!this.props.weather.list) {\n        return React.createElement(Spinner, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(React.Fragment, null, React.createElement(\"table\", {\n        className: \"table\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        className: \"has-background-light\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \"Temperature\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, \"Pressure \"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, \"Humidity\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, this.props.weather.list.map(this.renderWeather))));\n    }\n  }]);\n\n  return WeatherCharts;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(_ref) {\n  var weather = _ref.weather;\n  return weather;\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    fetchWeather: fetchWeather\n  }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WeatherCharts);","map":{"version":3,"sources":["/Users/kama/Desktop/CODE/Education/redux-weather-app/src/components/App/WeatherCharts/index.js"],"names":["React","Component","v4","connect","bindActionCreators","fetchWeather","Spinner","WeatherCharts","renderWeather","data","temps","main","temp","pressures","pressure","humidities","humidity","props","weather","list","map","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,EAAT,QAAmB,WAAnB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SAASC,YAAT,QAA6B,eAA7B;AAEA,OAAOC,OAAP,MAAoB,wBAApB;;IAEMC,a;;;;;;;;;;;;;;;;;;UAKJC,a,GAAgB,UAACC,IAAD,EAAU;AACxB,UAAMC,KAAK,GAAGD,IAAI,CAACE,IAAL,CAAUC,IAAxB;AACA,UAAMC,SAAS,GAAGJ,IAAI,CAACE,IAAL,CAAUG,QAA5B;AACA,UAAMC,UAAU,GAAGN,IAAI,CAACE,IAAL,CAAUK,QAA7B,CAHwB,CAIxB;AACA;AACA;;AAEA,aACE;AAAI,QAAA,GAAG,EAAEd,EAAE,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKQ,KAAL,CADF,CADF;AAKD,K;;;;;;;wCAjBmB;AAClB,WAAKO,KAAL,CAAWZ,YAAX;AACD;;;6BAiBQ;AACP,UAAI,CAAC,KAAKY,KAAL,CAAWC,OAAX,CAAmBC,IAAxB,EAA8B;AAC5B,eAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;AAED,aACE,0CACE;AAAO,QAAA,SAAS,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAO,QAAA,SAAS,EAAC,sBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHF,CADF,CADF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKF,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwBC,GAAxB,CAA4B,KAAKZ,aAAjC,CADH,CARF,CADF,CADF;AAgBD;;;;EAzCyBP,S;;AA4C5B,IAAMoB,eAAe,GAAG,SAAlBA,eAAkB;AAAA,MAAGH,OAAH,QAAGA,OAAH;AAAA,SAAiBA,OAAjB;AAAA,CAAxB;;AAEA,IAAMI,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ;AAAA,SACjCnB,kBAAkB,CAAC;AAAEC,IAAAA,YAAY,EAAZA;AAAF,GAAD,EAAmBkB,QAAnB,CADe;AAAA,CAAnC;;AAIA,eAAepB,OAAO,CAACkB,eAAD,EAAkBC,kBAAlB,CAAP,CAA6Cf,aAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { v4 } from 'node-uuid';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { fetchWeather } from 'redux/actions';\n\nimport Spinner from 'components/App/Spinner';\n\nclass WeatherCharts extends Component {\n  componentDidMount() {\n    this.props.fetchWeather();\n  }\n\n  renderWeather = (data) => {\n    const temps = data.main.temp;\n    const pressures = data.main.pressure;\n    const humidities = data.main.humidity;\n    // console.log(data);\n    // const { name } = data.city;\n    // const temps = \n\n    return (\n      <tr key={v4()}>\n        <td>{temps}</td>\n      </tr>\n    );\n  }\n\n  render() {\n    if (!this.props.weather.list) {\n      return <Spinner />;\n    }\n\n    return (\n      <>\n        <table className=\"table\">\n          <thead className=\"has-background-light\">\n            <tr>\n              <th>Temperature</th>\n              <th>Pressure </th>\n              <th>Humidity</th>\n            </tr>\n          </thead>\n          <tbody>\n            {this.props.weather.list.map(this.renderWeather)}\n          </tbody>\n        </table>\n      </>\n    );\n  };\n}\n\nconst mapStateToProps = ({ weather }) => weather;\n\nconst mapDispatchToProps = dispatch => (\n  bindActionCreators({ fetchWeather }, dispatch)\n);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WeatherCharts);\n"]},"metadata":{},"sourceType":"module"}