{"ast":null,"code":"import axios from 'axios';\nimport { FETCH_WEATHER_BEGIN, FETCH_WEATHER_SUCCESS, FETCH_WEATHER_FAILURE } from 'redux/actions/types';\nvar API_KEY = '1d1ed4c5c279b3103998e234955244b6';\nvar ROOT_URL = \"https://api.openweathermap.org/data/2.5/forecast?appid=\".concat(API_KEY);\nvar city = 'Warsaw';\nvar url = \"\".concat(ROOT_URL, \"&q=\").concat(city, \",pl\");\nexport function fetchWeather() {\n  return function (dispatch) {\n    dispatch(fetchWeatherBegin());\n    return axios.get(url) // .then(handleErrors)\n    // .then(response => response.json())\n    .then(function (response) {\n      dispatch(fetchWeatherSuccess(response));\n      return response;\n    }).catch(function (error) {\n      return dispatch(fetchWeatherFailure(error));\n    });\n  };\n} // function handleErrors(response) {\n//   if (!response.ok) {\n//     throw Error(response.statusText);\n//   }\n//   return response;\n// }\n\nexport var fetchWeatherBegin = function fetchWeatherBegin() {\n  return {\n    type: FETCH_WEATHER_BEGIN\n  };\n};\nexport var fetchWeatherSuccess = function fetchWeatherSuccess(weather) {\n  return {\n    type: FETCH_WEATHER_SUCCESS,\n    payload: {\n      weather: weather\n    }\n  };\n};\nexport var fetchWeatherFailure = function fetchWeatherFailure(error) {\n  return {\n    type: FETCH_WEATHER_FAILURE,\n    payload: {\n      error: error\n    }\n  };\n};","map":{"version":3,"sources":["/Users/kama/Desktop/CODE/Education/redux-weather-app/src/redux/actions/index.js"],"names":["axios","FETCH_WEATHER_BEGIN","FETCH_WEATHER_SUCCESS","FETCH_WEATHER_FAILURE","API_KEY","ROOT_URL","city","url","fetchWeather","dispatch","fetchWeatherBegin","get","then","response","fetchWeatherSuccess","catch","error","fetchWeatherFailure","type","weather","payload"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,mBADF,EAEEC,qBAFF,EAGEC,qBAHF,QAIO,qBAJP;AAMA,IAAMC,OAAO,GAAG,kCAAhB;AACA,IAAMC,QAAQ,oEAA6DD,OAA7D,CAAd;AACA,IAAME,IAAI,GAAG,QAAb;AACA,IAAMC,GAAG,aAAMF,QAAN,gBAAoBC,IAApB,QAAT;AAEA,OAAO,SAASE,YAAT,GAAwB;AAC7B,SAAO,UAAAC,QAAQ,EAAI;AACjBA,IAAAA,QAAQ,CAACC,iBAAiB,EAAlB,CAAR;AACA,WAAOV,KAAK,CAACW,GAAN,CAAUJ,GAAV,EACL;AACA;AAFK,KAGJK,IAHI,CAGC,UAAAC,QAAQ,EAAI;AAChBJ,MAAAA,QAAQ,CAACK,mBAAmB,CAACD,QAAD,CAApB,CAAR;AACA,aAAOA,QAAP;AACD,KANI,EAOJE,KAPI,CAOE,UAAAC,KAAK;AAAA,aAAIP,QAAQ,CAACQ,mBAAmB,CAACD,KAAD,CAApB,CAAZ;AAAA,KAPP,CAAP;AAQD,GAVD;AAWD,C,CAED;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,IAAMN,iBAAiB,GAAG,SAApBA,iBAAoB;AAAA,SAAO;AACtCQ,IAAAA,IAAI,EAAEjB;AADgC,GAAP;AAAA,CAA1B;AAIP,OAAO,IAAMa,mBAAmB,GAAG,SAAtBA,mBAAsB,CAAAK,OAAO;AAAA,SAAK;AAC7CD,IAAAA,IAAI,EAAEhB,qBADuC;AAE7CkB,IAAAA,OAAO,EAAE;AAAED,MAAAA,OAAO,EAAPA;AAAF;AAFoC,GAAL;AAAA,CAAnC;AAKP,OAAO,IAAMF,mBAAmB,GAAG,SAAtBA,mBAAsB,CAAAD,KAAK;AAAA,SAAK;AAC3CE,IAAAA,IAAI,EAAEf,qBADqC;AAE3CiB,IAAAA,OAAO,EAAE;AAAEJ,MAAAA,KAAK,EAALA;AAAF;AAFkC,GAAL;AAAA,CAAjC","sourcesContent":["import axios from 'axios';\nimport { \n  FETCH_WEATHER_BEGIN,\n  FETCH_WEATHER_SUCCESS,\n  FETCH_WEATHER_FAILURE\n} from 'redux/actions/types';\n\nconst API_KEY = '1d1ed4c5c279b3103998e234955244b6';\nconst ROOT_URL = `https://api.openweathermap.org/data/2.5/forecast?appid=${API_KEY}`;\nconst city = 'Warsaw';\nconst url = `${ROOT_URL}&q=${city},pl`;\n\nexport function fetchWeather() {\n  return dispatch => {\n    dispatch(fetchWeatherBegin());\n    return axios.get(url)\n      // .then(handleErrors)\n      // .then(response => response.json())\n      .then(response => {\n        dispatch(fetchWeatherSuccess(response));\n        return response;\n      })\n      .catch(error => dispatch(fetchWeatherFailure(error)));\n  };\n}\n\n// function handleErrors(response) {\n//   if (!response.ok) {\n//     throw Error(response.statusText);\n//   }\n//   return response;\n// }\n\nexport const fetchWeatherBegin = () => ({\n  type: FETCH_WEATHER_BEGIN\n});\n\nexport const fetchWeatherSuccess = weather => ({\n  type: FETCH_WEATHER_SUCCESS,\n  payload: { weather }\n});\n\nexport const fetchWeatherFailure = error => ({\n  type: FETCH_WEATHER_FAILURE,\n  payload: { error }\n});"]},"metadata":{},"sourceType":"module"}