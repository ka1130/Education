{"ast":null,"code":"import axios from 'axios';\nimport { FETCH_WEATHER_BEGIN, FETCH_WEATHER_SUCCESS, FETCH_WEATHER_FAILURE } from 'redux/actions/types'; // 52.285282099999996 21.0279629\n\nvar googolemapkey = 'AIzaSyDY5kZJmnORrvm1IODYBdB4sYjTOt6_maQ';\nvar API_KEY = '1d1ed4c5c279b3103998e234955244b6'; // const GEOLOCATED_URL =  `https://api.openweathermap.org/data/2.5/forecast?lat=${lat}&lon=${long}&appid=${API_KEY}`\n\nvar ROOT_URL = \"https://api.openweathermap.org/data/2.5/forecast?appid=\".concat(API_KEY);\nvar city = 'Warsaw';\nvar url = \"\".concat(ROOT_URL, \"&q=\").concat(city, \",pl\"); // const lat = 52;\n// const lon = 21;\n\nvar getUrl = function getUrl(lat, lon) {\n  return \"https://api.openweathermap.org/data/2.5/forecast?lat=\".concat(lat, \"&lon=\").concat(lon, \"&appid=\").concat(API_KEY);\n};\n\nvar coords = function coords() {\n  return navigator.geolocation.getCurrentPosition(function (position) {\n    return position.coords;\n  }).then(function (response) {\n    return console.log(response);\n  }).catch(function (error) {\n    return console.log(error);\n  });\n}; // console.log(coords());\n\n\nexport function fetchWeather() {\n  return function (dispatch) {\n    axios.get(url).then(function (response) {\n      dispatch(fetchWeatherSuccess(response));\n      return response;\n    }).catch(function (error) {\n      return dispatch(fetchWeatherFailure(error));\n    });\n  };\n}\nexport var fetchWeatherBegin = function fetchWeatherBegin() {\n  return {\n    type: FETCH_WEATHER_BEGIN\n  };\n};\nexport var fetchWeatherSuccess = function fetchWeatherSuccess(response) {\n  return {\n    type: FETCH_WEATHER_SUCCESS,\n    payload: response.data\n  };\n};\nexport var fetchWeatherFailure = function fetchWeatherFailure(error) {\n  return {\n    type: FETCH_WEATHER_FAILURE,\n    payload: error.message\n  };\n};","map":{"version":3,"sources":["/Users/kama/Desktop/CODE/Education/redux-weather-app/src/redux/actions/weatherActions.js"],"names":["axios","FETCH_WEATHER_BEGIN","FETCH_WEATHER_SUCCESS","FETCH_WEATHER_FAILURE","googolemapkey","API_KEY","ROOT_URL","city","url","getUrl","lat","lon","coords","navigator","geolocation","getCurrentPosition","position","then","response","console","log","catch","error","fetchWeather","dispatch","get","fetchWeatherSuccess","fetchWeatherFailure","fetchWeatherBegin","type","payload","data","message"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,mBADF,EAEEC,qBAFF,EAGEC,qBAHF,QAIO,qBAJP,C,CAMA;;AACA,IAAMC,aAAa,GAAG,yCAAtB;AAEA,IAAMC,OAAO,GAAG,kCAAhB,C,CACA;;AACA,IAAMC,QAAQ,oEAA6DD,OAA7D,CAAd;AACA,IAAME,IAAI,GAAG,QAAb;AACA,IAAMC,GAAG,aAAMF,QAAN,gBAAoBC,IAApB,QAAT,C,CAEA;AACA;;AAEA,IAAME,MAAM,GAAG,SAATA,MAAS,CAACC,GAAD,EAAMC,GAAN,EAAc;AAC3B,wEAA+DD,GAA/D,kBAA0EC,GAA1E,oBAAuFN,OAAvF;AACD,CAFD;;AAIA,IAAMO,MAAM,GAAG,SAATA,MAAS;AAAA,SAAMC,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAAyC,UAACC,QAAD;AAAA,WAAcA,QAAQ,CAACJ,MAAvB;AAAA,GAAzC,EAClBK,IADkB,CACb,UAAAC,QAAQ;AAAA,WAAIC,OAAO,CAACC,GAAR,CAAYF,QAAZ,CAAJ;AAAA,GADK,EAElBG,KAFkB,CAEZ,UAAAC,KAAK;AAAA,WAAIH,OAAO,CAACC,GAAR,CAAYE,KAAZ,CAAJ;AAAA,GAFO,CAAN;AAAA,CAAf,C,CAGA;;;AAEA,OAAO,SAASC,YAAT,GAAwB;AAC7B,SAAO,UAAAC,QAAQ,EAAI;AACjBxB,IAAAA,KAAK,CAACyB,GAAN,CAAUjB,GAAV,EACCS,IADD,CACM,UAAAC,QAAQ,EAAI;AAChBM,MAAAA,QAAQ,CAACE,mBAAmB,CAACR,QAAD,CAApB,CAAR;AACA,aAAOA,QAAP;AACD,KAJD,EAKCG,KALD,CAKO,UAAAC,KAAK;AAAA,aAAIE,QAAQ,CAACG,mBAAmB,CAACL,KAAD,CAApB,CAAZ;AAAA,KALZ;AAMD,GAPD;AAQD;AAED,OAAO,IAAMM,iBAAiB,GAAG,SAApBA,iBAAoB;AAAA,SAAO;AACtCC,IAAAA,IAAI,EAAE5B;AADgC,GAAP;AAAA,CAA1B;AAIP,OAAO,IAAMyB,mBAAmB,GAAG,SAAtBA,mBAAsB,CAAAR,QAAQ;AAAA,SAAK;AAC9CW,IAAAA,IAAI,EAAE3B,qBADwC;AAE9C4B,IAAAA,OAAO,EAAEZ,QAAQ,CAACa;AAF4B,GAAL;AAAA,CAApC;AAKP,OAAO,IAAMJ,mBAAmB,GAAG,SAAtBA,mBAAsB,CAAAL,KAAK;AAAA,SAAK;AAC3CO,IAAAA,IAAI,EAAE1B,qBADqC;AAE3C2B,IAAAA,OAAO,EAAER,KAAK,CAACU;AAF4B,GAAL;AAAA,CAAjC","sourcesContent":["import axios from 'axios';\nimport { \n  FETCH_WEATHER_BEGIN,\n  FETCH_WEATHER_SUCCESS,\n  FETCH_WEATHER_FAILURE\n} from 'redux/actions/types';\n\n// 52.285282099999996 21.0279629\nconst googolemapkey = 'AIzaSyDY5kZJmnORrvm1IODYBdB4sYjTOt6_maQ';\n\nconst API_KEY = '1d1ed4c5c279b3103998e234955244b6';\n// const GEOLOCATED_URL =  `https://api.openweathermap.org/data/2.5/forecast?lat=${lat}&lon=${long}&appid=${API_KEY}`\nconst ROOT_URL = `https://api.openweathermap.org/data/2.5/forecast?appid=${API_KEY}`;\nconst city = 'Warsaw';\nconst url = `${ROOT_URL}&q=${city},pl`;\n\n// const lat = 52;\n// const lon = 21;\n\nconst getUrl = (lat, lon) => {\n  return `https://api.openweathermap.org/data/2.5/forecast?lat=${lat}&lon=${lon}&appid=${API_KEY}`;\n}\n\nconst coords = () => navigator.geolocation.getCurrentPosition((position) => position.coords)\n  .then(response => console.log(response))\n  .catch(error => console.log(error));\n// console.log(coords());\n\nexport function fetchWeather() {\n  return dispatch => {\n    axios.get(url)\n    .then(response => {\n      dispatch(fetchWeatherSuccess(response));\n      return response; \n    })\n    .catch(error => dispatch(fetchWeatherFailure(error)));\n  };\n}\n\nexport const fetchWeatherBegin = () => ({\n  type: FETCH_WEATHER_BEGIN\n});\n\nexport const fetchWeatherSuccess = response => ({\n  type: FETCH_WEATHER_SUCCESS,\n  payload: response.data\n});\n\nexport const fetchWeatherFailure = error => ({\n  type: FETCH_WEATHER_FAILURE,\n  payload: error.message\n});"]},"metadata":{},"sourceType":"module"}