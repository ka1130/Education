{"ast":null,"code":"import _classCallCheck from \"/Users/kama/Desktop/CODE/Education/redux-weather-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kama/Desktop/CODE/Education/redux-weather-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kama/Desktop/CODE/Education/redux-weather-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kama/Desktop/CODE/Education/redux-weather-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kama/Desktop/CODE/Education/redux-weather-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kama/Desktop/CODE/Education/redux-weather-app/src/components/App/WeatherList/index.js\";\nimport React, { Component } from 'react';\nimport Geocode from 'react-geocode';\nimport { v4 } from 'node-uuid';\nimport Spinner from 'components/App/Spinner';\nimport 'bulma/css/bulma.css';\n\nvar WeatherList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(WeatherList, _Component);\n\n  function WeatherList() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, WeatherList);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(WeatherList)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.renderWeather = function (day) {\n      return React.createElement(\"tr\", {\n        key: v4(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, day.dt_txt), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, (day.main.temp - 273.15).toFixed(2), \" \\xB0C\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, day.main.pressure, \" hPa\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, day.main.humidity, \"%\"));\n    };\n\n    return _this;\n  }\n\n  _createClass(WeatherList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      console.log(Geocode);\n      Geocode.setApiKey(\"AIzaSyAq06l5RUVfib62IYRQacLc-KAy0XIWAVs\");\n      Geocode.enableDebug(); // Get address from latidude & longitude.\n\n      Geocode.fromLatLng(\"48.8583701\", \"2.2922926\").then(function (response) {\n        var address = response.results[0].formatted_address;\n        console.log(address);\n      }, function (error) {\n        console.error(error);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (!this.props.weather.list) {\n        return React.createElement(Spinner, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(React.Fragment, null, React.createElement(\"table\", {\n        className: \"table\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        className: \"has-background-light\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, \"Time\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"Temperature\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"Pressure \"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"Humidity\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, this.props.weather.list.map(this.renderWeather))));\n    }\n  }]);\n\n  return WeatherList;\n}(Component);\n\nexport default WeatherList;","map":{"version":3,"sources":["/Users/kama/Desktop/CODE/Education/redux-weather-app/src/components/App/WeatherList/index.js"],"names":["React","Component","Geocode","v4","Spinner","WeatherList","renderWeather","day","dt_txt","main","temp","toFixed","pressure","humidity","console","log","setApiKey","enableDebug","fromLatLng","then","response","address","results","formatted_address","error","props","weather","list","map"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,SAASC,EAAT,QAAmB,WAAnB;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,OAAO,qBAAP;;IAEMC,W;;;;;;;;;;;;;;;;;;UAkBJC,a,GAAgB,UAACC,GAAD,EAAS;AACvB,aACE;AAAI,QAAA,GAAG,EAAEJ,EAAE,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKI,GAAG,CAACC,MAAT,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK,CAACD,GAAG,CAACE,IAAJ,CAASC,IAAT,GAAgB,MAAjB,EAAyBC,OAAzB,CAAiC,CAAjC,CAAL,WAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKJ,GAAG,CAACE,IAAJ,CAASG,QAAd,SAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKL,GAAG,CAACE,IAAJ,CAASI,QAAd,MAJF,CADF;AAQD,K;;;;;;;wCA1BmB;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAYb,OAAZ;AACAA,MAAAA,OAAO,CAACc,SAAR,CAAkB,yCAAlB;AACAd,MAAAA,OAAO,CAACe,WAAR,GAHkB,CAKlB;;AACAf,MAAAA,OAAO,CAACgB,UAAR,CAAmB,YAAnB,EAAiC,WAAjC,EAA8CC,IAA9C,CACE,UAAAC,QAAQ,EAAI;AACV,YAAMC,OAAO,GAAGD,QAAQ,CAACE,OAAT,CAAiB,CAAjB,EAAoBC,iBAApC;AACAT,QAAAA,OAAO,CAACC,GAAR,CAAYM,OAAZ;AACD,OAJH,EAKE,UAAAG,KAAK,EAAI;AACPV,QAAAA,OAAO,CAACU,KAAR,CAAcA,KAAd;AACD,OAPH;AASD;;;6BAaQ;AACP,UAAI,CAAC,KAAKC,KAAL,CAAWC,OAAX,CAAmBC,IAAxB,EAA8B;AAC5B,eAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;AAED,aACE,0CACE;AAAO,QAAA,SAAS,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAO,QAAA,SAAS,EAAC,sBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJF,CADF,CADF,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKF,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwBC,GAAxB,CAA4B,KAAKtB,aAAjC,CADH,CATF,CADF,CADF;AAiBD;;;;EAnDuBL,S;;AAsD1B,eAAeI,WAAf","sourcesContent":["import React, { Component } from 'react';\nimport Geocode from 'react-geocode';\nimport { v4 } from 'node-uuid';\nimport Spinner from 'components/App/Spinner';\nimport 'bulma/css/bulma.css'\n\nclass WeatherList extends Component {\n  componentDidMount() {\n    console.log(Geocode);\n    Geocode.setApiKey(\"AIzaSyAq06l5RUVfib62IYRQacLc-KAy0XIWAVs\");\n    Geocode.enableDebug();\n \n    // Get address from latidude & longitude.\n    Geocode.fromLatLng(\"48.8583701\", \"2.2922926\").then(\n      response => {\n        const address = response.results[0].formatted_address;\n        console.log(address);\n      },\n      error => {\n        console.error(error);\n      }\n    );\n  }\n\n  renderWeather = (day) => {\n    return (\n      <tr key={v4()}>\n        <td>{day.dt_txt}</td>\n        <td>{(day.main.temp - 273.15).toFixed(2)} Â°C</td>\n        <td>{day.main.pressure} hPa</td>\n        <td>{day.main.humidity}%</td>\n      </tr>\n    );\n  }\n\n  render() {\n    if (!this.props.weather.list) {\n      return <Spinner />;\n    }\n\n    return (\n      <>\n        <table className=\"table\">\n          <thead className=\"has-background-light\">\n            <tr>\n              <th>Time</th>\n              <th>Temperature</th>\n              <th>Pressure </th>\n              <th>Humidity</th>\n            </tr>\n          </thead>\n          <tbody>\n            {this.props.weather.list.map(this.renderWeather)}\n          </tbody>\n        </table>\n      </>\n    );\n  };\n}\n\nexport default WeatherList;"]},"metadata":{},"sourceType":"module"}