{"ast":null,"code":"import axios from 'axios';\nimport { FETCH_WEATHER_BEGIN, FETCH_WEATHER_SUCCESS, FETCH_WEATHER_FAILURE } from 'redux/actions/types';\nvar googolemapkey = 'AIzaSyDY5kZJmnORrvm1IODYBdB4sYjTOt6_maQ';\nvar API_KEY = '1d1ed4c5c279b3103998e234955244b6'; // const GEOLOCATED_URL =  `https://api.openweathermap.org/data/2.5/forecast?lat=${lat}&lon=${long}&appid=${API_KEY}`\n\nvar ROOT_URL = \"https://api.openweathermap.org/data/2.5/forecast?appid=\".concat(API_KEY);\nvar city = 'Warsaw';\nvar url = \"\".concat(ROOT_URL, \"&q=\").concat(city, \",pl\"); // pass argument: location to fetchWeather, then use it with geolocation\n\nexport function fetchWeather() {\n  return function (dispatch) {\n    axios.get(url).then(function (response) {\n      dispatch(fetchWeatherSuccess(response));\n      return response;\n    }).catch(function (error) {\n      return dispatch(fetchWeatherFailure(error));\n    });\n  };\n}\nexport var fetchWeatherBegin = function fetchWeatherBegin() {\n  return {\n    type: FETCH_WEATHER_BEGIN\n  };\n};\nexport var fetchWeatherSuccess = function fetchWeatherSuccess(response) {\n  return {\n    type: FETCH_WEATHER_SUCCESS,\n    payload: response.data\n  };\n};\nexport var fetchWeatherFailure = function fetchWeatherFailure(error) {\n  return {\n    type: FETCH_WEATHER_FAILURE,\n    payload: error.message\n  };\n};","map":{"version":3,"sources":["/Users/kama/Desktop/CODE/Education/redux-weather-app/src/redux/actions/weatherActions.js"],"names":["axios","FETCH_WEATHER_BEGIN","FETCH_WEATHER_SUCCESS","FETCH_WEATHER_FAILURE","googolemapkey","API_KEY","ROOT_URL","city","url","fetchWeather","dispatch","get","then","response","fetchWeatherSuccess","catch","error","fetchWeatherFailure","fetchWeatherBegin","type","payload","data","message"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,mBADF,EAEEC,qBAFF,EAGEC,qBAHF,QAIO,qBAJP;AAMA,IAAMC,aAAa,GAAG,yCAAtB;AAEA,IAAMC,OAAO,GAAG,kCAAhB,C,CACA;;AACA,IAAMC,QAAQ,oEAA6DD,OAA7D,CAAd;AACA,IAAME,IAAI,GAAG,QAAb;AACA,IAAMC,GAAG,aAAMF,QAAN,gBAAoBC,IAApB,QAAT,C,CAEA;;AACA,OAAO,SAASE,YAAT,GAAwB;AAC7B,SAAO,UAAAC,QAAQ,EAAI;AACjBV,IAAAA,KAAK,CAACW,GAAN,CAAUH,GAAV,EACCI,IADD,CACM,UAAAC,QAAQ,EAAI;AAChBH,MAAAA,QAAQ,CAACI,mBAAmB,CAACD,QAAD,CAApB,CAAR;AACA,aAAOA,QAAP;AACD,KAJD,EAKCE,KALD,CAKO,UAAAC,KAAK;AAAA,aAAIN,QAAQ,CAACO,mBAAmB,CAACD,KAAD,CAApB,CAAZ;AAAA,KALZ;AAMD,GAPD;AAQD;AAED,OAAO,IAAME,iBAAiB,GAAG,SAApBA,iBAAoB;AAAA,SAAO;AACtCC,IAAAA,IAAI,EAAElB;AADgC,GAAP;AAAA,CAA1B;AAIP,OAAO,IAAMa,mBAAmB,GAAG,SAAtBA,mBAAsB,CAAAD,QAAQ;AAAA,SAAK;AAC9CM,IAAAA,IAAI,EAAEjB,qBADwC;AAE9CkB,IAAAA,OAAO,EAAEP,QAAQ,CAACQ;AAF4B,GAAL;AAAA,CAApC;AAKP,OAAO,IAAMJ,mBAAmB,GAAG,SAAtBA,mBAAsB,CAAAD,KAAK;AAAA,SAAK;AAC3CG,IAAAA,IAAI,EAAEhB,qBADqC;AAE3CiB,IAAAA,OAAO,EAAEJ,KAAK,CAACM;AAF4B,GAAL;AAAA,CAAjC","sourcesContent":["import axios from 'axios';\nimport { \n  FETCH_WEATHER_BEGIN,\n  FETCH_WEATHER_SUCCESS,\n  FETCH_WEATHER_FAILURE\n} from 'redux/actions/types';\n\nconst googolemapkey = 'AIzaSyDY5kZJmnORrvm1IODYBdB4sYjTOt6_maQ';\n\nconst API_KEY = '1d1ed4c5c279b3103998e234955244b6';\n// const GEOLOCATED_URL =  `https://api.openweathermap.org/data/2.5/forecast?lat=${lat}&lon=${long}&appid=${API_KEY}`\nconst ROOT_URL = `https://api.openweathermap.org/data/2.5/forecast?appid=${API_KEY}`;\nconst city = 'Warsaw';\nconst url = `${ROOT_URL}&q=${city},pl`;\n\n// pass argument: location to fetchWeather, then use it with geolocation\nexport function fetchWeather() {\n  return dispatch => {\n    axios.get(url)\n    .then(response => {\n      dispatch(fetchWeatherSuccess(response));\n      return response; \n    })\n    .catch(error => dispatch(fetchWeatherFailure(error)));\n  };\n}\n\nexport const fetchWeatherBegin = () => ({\n  type: FETCH_WEATHER_BEGIN\n});\n\nexport const fetchWeatherSuccess = response => ({\n  type: FETCH_WEATHER_SUCCESS,\n  payload: response.data\n});\n\nexport const fetchWeatherFailure = error => ({\n  type: FETCH_WEATHER_FAILURE,\n  payload: error.message\n});"]},"metadata":{},"sourceType":"module"}